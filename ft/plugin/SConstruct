# This compiles the example(s) and the library
from init_env import init_environment
import os

# load needed environment for this library
env = init_environment('glibrary clhep geant4 ccdb')

# standard pre and suffix for gemc plugins and path
env.Replace(SHLIBSUFFIX = ".gplugin")
env.Replace(SHLIBPREFIX = "")
plugins_dir_s   = os.environ.get('GPLUGIN_PATH')
plugins_dir     = os.path.realpath(plugins_dir_s)

env.Append(CXXFLAGS=['-std=c++20'])

ft_cal_sources = [
			  'ft_cal_readoutSpecs.cc',
			  'ft_cal_loadConstants.cc',
			  'ft_cal_loadTT.cc',
			  'ft_cal_hitDigitization.cc'
			  ]

ft_hodo_sources = [
			  'ft_hodo_readoutSpecs.cc',
			  'ft_hodo_loadConstants.cc',
			  'ft_hodo_loadTT.cc',
			  'ft_hodo_hitDigitization.cc'
			  ]

ft_mmtrk_sources = [
			  'ft_mmtrk_readoutSpecs.cc',
			  'ft_mmtrk_loadConstants.cc',
			  'ft_mmtrk_stripSharing.cc',
			  'ft_mmtrk_hitDigitization.cc'
			  ]

ft_cal_plugin   = env.SharedLibrary( source = ft_cal_sources,   target = 'ft_cal')
ft_hodo_plugin  = env.SharedLibrary( source = ft_hodo_sources,  target = 'ft_hodo')
ft_mmtrk_plugin = env.SharedLibrary( source = ft_mmtrk_sources, target = 'ft_trk')

# use scons install to copy the plugin to the plugin directory
# see scons user guide (scons install) for more info
env.Alias('install', plugins_dir)
env.Install(plugins_dir, ft_cal_plugin)
env.Install(plugins_dir, ft_hodo_plugin)
env.Install(plugins_dir, ft_mmtrk_plugin)
